// ==========================================================================

//  Base Mixins - built with SASS - http://sass-lang.com/
//  Theme URI: http://git.io/base
//  Author: Matthew Hartman - http://www.matthewhartman.com.au/
//  Version: 0.1 - Last Updated: 7th June, 2013

// ==========================================================================

// Font Sizes (REMs with PX fallback for older browsers)
@mixin font-size($size) {
    font-size: $size + px;
    font-size: ($size/16) + rem;
}

// Line Height Sizes (REMs with PX fallback for older browsers)
@mixin line-height($size) {
    line-height: $size + px;
    line-height: ($size/16) + rem;
}

// Rounded Corners
@mixin rounded($radius) {
  -webkit-border-radius: ($radius) + px;
  -moz-border-radius: ($radius) + px;
  -o-border-radius: ($radius) + px;
  -ms-border-radius: ($radius) + px;
  border-radius: ($radius) + px;
}
//Clearfix
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    *zoom: 1;
    clear: both;
  }
}
// Perspective
@mixin perspective ($perspective) {
    -moz-perspective: $perspective;
    -webkit-perspective: $perspective;
    -o-perspective: $perspective;
    -ms-perspective: $perspective;
    perspective: $perspective;
}
// Backface-visibility
@mixin backface-visibility ($backface-visibility) {
    -moz-backface-visibility: $backface-visibility;
    -webkit-backface-visibility: $backface-visibility;
    -o-backface-visibility: $backface-visibility;
    -ms-backface-visibility: $backface-visibility;
    backface-visibility: $backface-visibility;
}
//Box Shadow
 /*    Horiz/Vert/Blur/Spread*/
@mixin box-shadow-custom($horizontal: 0px, $vertical: 1px, $blur: 2px, $color: rgba(0,0,0,0.9)) {
    -webkit-box-shadow: $horizontal $vertical $blur $color;
    -moz-box-shadow:  $horizontal $vertical $blur $color;
    -o-box-shadow: $horizontal $vertical $blur $color;
    -ms-box-shadow: $horizontal $vertical $blur $color;
    box-shadow: $horizontal $vertical $blur $color;
}
//Transform perserve3d
@mixin preserve-3d {
    -webkit-transform-style: preserve-3d;
    -moz-transform-style:preserve-3d;
    -ms-transform-style:preserve-3d;
    -o-transform-style:preserve-3d;
    transform-style:preserve-3d;
}
//Transform Rotate
@mixin rotate($transform-angle) {
    -webkit-transform:rotate($transform-angle);
    -moz-transform:rotate($transform-angle);
    -ms-transform:rotate($transform-angle);
    -o-transform:rotate($transform-angle);
    transform:rotate($transform-angle);
}
@mixin rotateX($transform-angle) {
    -webkit-transform:rotateX($transform-angle);
    -moz-transform:rotateX($transform-angle);
    -ms-transform:rotateX($transform-angle);
    -o-transform:rotateX($transform-angle);
    transform:rotateX($transform-angle);
}
@mixin rotateY($transform-angle) {
    -webkit-transform:rotateY($transform-angle);
    -moz-transform:rotateY($transform-angle);
    -ms-transform:rotateY($transform-angle);
    -o-transform:rotateY($transform-angle);
    transform:rotateY($transform-angle);
}
//Transition
@mixin transition($transition-property, $transition-time, $method, $transition-delay) {
    -webkit-transition: $transition-property $transition-time $method $transition-delay;
    -moz-transition: $transition-property $transition-time $method $transition-delay;
    -ms-transition: $transition-property $transition-time $method $transition-delay;
    -o-transition: $transition-property $transition-time $method $transition-delay;
    transition: $transition-property $transition-time $method $transition-delay;
}
//Transform Scale
@mixin scale($transform-scale-newsize) {
    -webkit-transform:scale($transform-scale-newsize);
    -moz-transform:scale($transform-scale-newsize);
    -ms-transform:scale($transform-scale-newsize);
    -o-transform:scale($transform-scale-newsize);
    transform:scale($transform-scale-newsize);
}
//Transform rotate, scale, skew, moveX, moveY
@mixin transform ($rotate: 90deg, $scale: 1, $skew: 1deg, $translateX: 10px, $translateY: 10px ) {
  -webkit-transform: rotate($rotate) scale($scale) skew($skew) translateX($translateX) translateY($translateY);
  -moz-transform: rotate($rotate) scale($scale) skew($skew) translateX($translateX) translateY($translateY);
  -o-transform: rotate($rotate) scale($scale) skew($skew) translateX($translateX) translateY($translateY);
  -ms-transform: rotate($rotate) scale($scale) skew($skew) translateX($translateX) translateY($translateY); 
  transform: rotate($rotate) scale($scale) skew($skew) translateX($translateX) translateY($translateY);
}
/*columns mixins*/
@mixin columns($count) {
    -webkit-column-count:$count; /* Chrome, Safari, Opera */
    -moz-column-count:$count; /* Firefox */
    -o-column-count:$count;
    -ms-column-count:$count;
    column-count:$count;
}
/*legal values are 1, all*/
@mixin column-span($columns) {
    -webkit-column-span:$columns; /* Chrome, Safari, Opera */
    -moz-column-span:$columns; /* Firefox */
    -o-column-span:$columns;
    -ms-column-span:$columns;
    column-span:$columns;  
}
@mixin column-gap($gap) {
    -webkit-column-gap:$gap; /* Chrome, Safari, Opera */
    -moz-column-gap:$gap; /* Firefox */
    -o-column-gap:$gap;
    -ms-column-gap:$gap;
    column-gap:$gap;
}
@mixin column-rule($width, $style, $color) {
    -webkit-column-rule: $width,$style, $color;
    -moz-column-rule: $width,$style, $color;
    -o-column-rule: $width,$style, $color;
    -ms-column-rule: $width,$style, $color;
    column-rule: $width,$style, $color;
}